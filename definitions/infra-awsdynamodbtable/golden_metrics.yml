readThrottledRequests:
  title: Read throttled requests
  unit: COUNT
  queries:
    aws:
      select: sum(aws.dynamodb.ReadThrottleEvents.byGlobalSecondaryIndex)
      from: Metric
      eventId: entity.guid
      eventName: entity.name
    awsSample:
      select: sum(provider.readThrottleEvents.Sum)
      from: DatastoreSample
      where: provider='DynamoDbTable'
      eventId: entityGuid
      eventName: entityName
  kind: SUM
writeThrottledRequests:
  title: Write throttled requests
  unit: COUNT
  queries:
    aws:
      select: sum(aws.dynamodb.WriteThrottleEvents.byGlobalSecondaryIndex)
      from: Metric
      eventId: entity.guid
      eventName: entity.name
    awsSample:
      select: sum(provider.writeThrottleEvents.Sum)
      from: DatastoreSample
      where: provider='DynamoDbTable'
      eventId: entityGuid
      eventName: entityName
  kind: SUM
getitemLatencyMs:
  title: GetItem latency (ms)
  unit: SECONDS
  queries:
    aws:
      select: average(aws.dynamodb.SuccessfulRequestLatency.get)
      from: Metric
      eventId: entity.guid
      eventName: entity.name
    awsSample:
      select: average(provider.getSuccessfulRequestLatency.Average)
      from: DatastoreSample
      where: provider='DynamoDbTable'
      eventId: entityGuid
      eventName: entityName
  kind: AVERAGE
